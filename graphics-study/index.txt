一个像素点，展示到屏幕的过程

数据与指令 -> CPU -> 显卡驱动程序 -> 显卡 -> 显示器 -> 人

像素 <- 红绿蓝(rgb) <- 滤光片 <- 光源 （液晶显示器）
液晶 -> 不同电压 -> 不同分子排布 -> 不同的光线

1.CPU -> 处理数学逻辑，转换为几何逻辑（GPU能识别的数据）
2.GPU -> 绘图（光栅化）
3.显存（帧缓存）
4.显示器

CPU / GPU
CPU 
    计算、逻辑控制、寄存器（存储临时数据）
    串行计算
GPU 
    并行计算
    面向GPU编程过程

canvas / webgl
canvas
    面向CPU
    适合2d
webgl
    浏览器开放的面向GPU编程的接口
    适合3d

webgl -> openes -> skia -> flutter

canvas 2d
    路径 -> 点集合 -> 记录点 -> 完成绘制（释放点记录）
    图形拾取？

绘图引擎
    1.拾取
    2.事件封装
    3.局部渲染（Chrome底层）
    4.图形层级控制（控制绘图顺序、图形队列）

应用
    x-spreadsheet